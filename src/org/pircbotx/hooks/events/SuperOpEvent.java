// Generated by delombok at Thu Oct 04 13:11:43 CEST 2012
/**
 * Copyright (C) 2010-2011 Leon Blakey <lord.quackstar at gmail.com>
 *
 * This file is part of PircBotX.
 *
 * PircBotX is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PircBotX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PircBotX.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.pircbotx.hooks.events;

import org.pircbotx.Channel;
import org.pircbotx.User;
import org.pircbotx.hooks.Event;
import org.pircbotx.HeufyBot;
import org.pircbotx.hooks.types.GenericUserModeEvent;
/**
 * Called when a user (possibly us) gets superop status granted in a channel. Note
 * that this isn't supported on all servers or may be used for something else
 *  <p>
 * This is a type of mode change and therefor is also dispatched in a 
 * {@link org.pircbotx.hooks.events.ModeEvent}
 * @author Leon Blakey <lord.quackstar at gmail.com>
 */

public class SuperOpEvent<T extends HeufyBot> extends Event<T> implements GenericUserModeEvent<T> {
	protected final Channel channel;
	protected final User source;
	protected final User recipient;
	protected final boolean isSuperOp;
	/**
	 * Default constructor to setup object. Timestamp is automatically set
	 * to current time as reported by {@link System#currentTimeMillis() }
	 * @param channel The channel in which the mode change took place.
	 * @param source The user that performed the mode change.
	 * @param recipient The nick of the user that got 'voiced'.
	 */
	public SuperOpEvent(T bot, Channel channel, User source, User recipient, boolean isSuperOp) {
		super(bot);
		this.channel = channel;
		this.source = source;
		this.recipient = recipient;
		this.isSuperOp = isSuperOp;
	}
	/**
	 * Respond by send a message in the channel to the user that set the mode
	 * (<b>Warning:</b> not to the user that got SuperOp status!) in <code>user: message</code>
	 * format
	 * @param response The response to send 
	 */
	@Override
	public void respond(String response) {
		getBot().sendMessage(getChannel(), getSource(), response);
	}
	
	@java.lang.SuppressWarnings("all")
	public Channel getChannel() {
		return this.channel;
	}
	
	@java.lang.SuppressWarnings("all")
	public User getSource() {
		return this.source;
	}
	
	@java.lang.SuppressWarnings("all")
	public User getRecipient() {
		return this.recipient;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isSuperOp() {
		return this.isSuperOp;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "SuperOpEvent(channel=" + this.getChannel() + ", source=" + this.getSource() + ", recipient=" + this.getRecipient() + ", isSuperOp=" + this.isSuperOp() + ")";
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof SuperOpEvent)) return false;
		final SuperOpEvent<?> other = (SuperOpEvent<?>)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		if (!super.equals(o)) return false;
		if (this.getChannel() == null ? other.getChannel() != null : !this.getChannel().equals((java.lang.Object)other.getChannel())) return false;
		if (this.getSource() == null ? other.getSource() != null : !this.getSource().equals((java.lang.Object)other.getSource())) return false;
		if (this.getRecipient() == null ? other.getRecipient() != null : !this.getRecipient().equals((java.lang.Object)other.getRecipient())) return false;
		if (this.isSuperOp() != other.isSuperOp()) return false;
		return true;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean canEqual(final java.lang.Object other) {
		return other instanceof SuperOpEvent;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		result = result * PRIME + super.hashCode();
		result = result * PRIME + (this.getChannel() == null ? 0 : this.getChannel().hashCode());
		result = result * PRIME + (this.getSource() == null ? 0 : this.getSource().hashCode());
		result = result * PRIME + (this.getRecipient() == null ? 0 : this.getRecipient().hashCode());
		result = result * PRIME + (this.isSuperOp() ? 1231 : 1237);
		return result;
	}
}