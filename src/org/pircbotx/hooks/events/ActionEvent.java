// Generated by delombok at Fri May 17 11:49:19 CEST 2013
/**
 * Copyright (C) 2010-2013 Leon Blakey <lord.quackstar at gmail.com>
 *
 * This file is part of PircBotX.
 *
 * PircBotX is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PircBotX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PircBotX. If not, see <http://www.gnu.org/licenses/>.
 */
package org.pircbotx.hooks.events;

import org.pircbotx.Channel;
import org.pircbotx.HeufyBot;
import org.pircbotx.User;
import org.pircbotx.hooks.Event;
import org.pircbotx.hooks.types.GenericMessageEvent;
/**
 * Called whenever an ACTION is sent from a user. E.g.
 * such events generated by typing "/me goes shopping" in most IRC clients.
 * @author Leon Blakey <lord.quackstar at gmail.com>
 */

public class ActionEvent<T extends HeufyBot> extends Event<T> implements GenericMessageEvent<T> {
	protected final User user;
	protected final Channel channel;
	protected final String action;
	/**
	 * Default constructor to setup object. Timestamp is automatically set
	 * to current time as reported by {@link System#currentTimeMillis() }
	 * @param user The user object representing the user that sent the message
	 * @param channel The channel object representing the target channel of the
	 * action. A value of <code>null</code> means that this is
	 * is a private message, not a channel
	 * @param action The action carried out by the user.
	 */
	public ActionEvent(T bot, User user, Channel channel, String action) {
		super(bot);
		this.user = user;
		this.channel = channel;
		this.action = action;
	}
	/**
	 * Returns the action sent by the user. Same result as getAction
	 * @return Action sent by the user
	 */
	public String getMessage() {
		return action;
	}
	/**
	 * Respond to an action with an action.
	 * <p>
	 * Example
	 * <pre>
	 *   * SomeUser thinks that this is awesome
	 *   * PircBotX agrees
	 * </pre>
	 * @param response The response to send
	 */
	@Override
	public void respond(String response) {
		if (getChannel() != null) getBot().sendAction(getChannel(), response); else getBot().sendAction(getUser(), response);
	}
	
	@java.lang.SuppressWarnings("all")
	public User getUser() {
		return this.user;
	}
	
	@java.lang.SuppressWarnings("all")
	public Channel getChannel() {
		return this.channel;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getAction() {
		return this.action;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "ActionEvent(user=" + this.getUser() + ", channel=" + this.getChannel() + ", action=" + this.getAction() + ")";
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof ActionEvent)) return false;
		final ActionEvent<?> other = (ActionEvent<?>)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		if (!super.equals(o)) return false;
		final java.lang.Object this$user = this.getUser();
		final java.lang.Object other$user = other.getUser();
		if (this$user == null ? other$user != null : !this$user.equals(other$user)) return false;
		final java.lang.Object this$channel = this.getChannel();
		final java.lang.Object other$channel = other.getChannel();
		if (this$channel == null ? other$channel != null : !this$channel.equals(other$channel)) return false;
		final java.lang.Object this$action = this.getAction();
		final java.lang.Object other$action = other.getAction();
		if (this$action == null ? other$action != null : !this$action.equals(other$action)) return false;
		return true;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean canEqual(final java.lang.Object other) {
		return other instanceof ActionEvent;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		result = result * PRIME + super.hashCode();
		final java.lang.Object $user = this.getUser();
		result = result * PRIME + ($user == null ? 0 : $user.hashCode());
		final java.lang.Object $channel = this.getChannel();
		result = result * PRIME + ($channel == null ? 0 : $channel.hashCode());
		final java.lang.Object $action = this.getAction();
		result = result * PRIME + ($action == null ? 0 : $action.hashCode());
		return result;
	}
}