// Generated by delombok at Thu Oct 04 13:11:43 CEST 2012
/**
 * Copyright (C) 2010-2011 Leon Blakey <lord.quackstar at gmail.com>
 *
 * This file is part of PircBotX.
 *
 * PircBotX is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PircBotX is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PircBotX.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.pircbotx;
/**
 * This is a giant info bean of various things about the server. This is separate
 * from the {@link HeufyBot} class due to its length
 * 
 * Most info thanks to <a href="www.irc.org/tech_docs/005.html">this great website
 * </a> on what each one does
 *
 * @author  Leon Blakey <lord.quackstar at gmail.com>
 */

public class ServerInfo {
	private final HeufyBot bot;
	
	public void parse(String input) {
	}
	//005 information
	private String prefixes = "";
	private String channelTypes = "";
	private String channelModes = "";
	private int modes;
	private int maxChannels;
	private int chanlimit;
	private int maxNickLength;
	private int maxBans;
	private String maxList = "";
	private String network = "";
	private String exceptions = "";
	private String invites = "";
	private boolean wallChOps = false;
	private boolean wallVoices = false;
	private String statusMessage = "";
	private String caseMapping = "";
	private String EList = "";
	private int topicLength;
	private int kickLength;
	private int channelLength;
	private int channelIDLength;
	private String standard = "";
	private int silence;
	private boolean RFC2812;
	private boolean penalty;
	private boolean forcedNickChanges;
	private boolean safeList;
	private int awayLength;
	private boolean noQuit;
	private boolean userIPExists;
	private boolean cPrivMsgExists;
	private boolean cNoticeExists;
	private int maxTargets;
	private boolean knockExists;
	private boolean vChannels;
	private int watchMax;
	private boolean whoX;
	private boolean callerID;
	private boolean accept;
	private String language = "";
	//Other information
	private String motd = "";
	private int highestConnections;
	private int highestClients;
	private int totalUsers;
	private int totalInvisibleUsers;
	private int totalServers;
	private int totalOperatorsOnline;
	private int totalUnknownConnections;
	private int totalChannelsFormed;
	private int serverUsers;
	private int connectedServers;
	
	@java.beans.ConstructorProperties({"bot"})
	@java.lang.SuppressWarnings("all")
	public ServerInfo(final HeufyBot bot) {
		this.bot = bot;
	}
	
	@java.lang.SuppressWarnings("all")
	public HeufyBot getBot() {
		return this.bot;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getPrefixes() {
		return this.prefixes;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getChannelTypes() {
		return this.channelTypes;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getChannelModes() {
		return this.channelModes;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getModes() {
		return this.modes;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getMaxChannels() {
		return this.maxChannels;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getChanlimit() {
		return this.chanlimit;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getMaxNickLength() {
		return this.maxNickLength;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getMaxBans() {
		return this.maxBans;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getMaxList() {
		return this.maxList;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getNetwork() {
		return this.network;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getExceptions() {
		return this.exceptions;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getInvites() {
		return this.invites;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isWallChOps() {
		return this.wallChOps;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isWallVoices() {
		return this.wallVoices;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getStatusMessage() {
		return this.statusMessage;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getCaseMapping() {
		return this.caseMapping;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getEList() {
		return this.EList;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getTopicLength() {
		return this.topicLength;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getKickLength() {
		return this.kickLength;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getChannelLength() {
		return this.channelLength;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getChannelIDLength() {
		return this.channelIDLength;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getStandard() {
		return this.standard;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getSilence() {
		return this.silence;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isRFC2812() {
		return this.RFC2812;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isPenalty() {
		return this.penalty;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isForcedNickChanges() {
		return this.forcedNickChanges;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isSafeList() {
		return this.safeList;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getAwayLength() {
		return this.awayLength;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isNoQuit() {
		return this.noQuit;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isUserIPExists() {
		return this.userIPExists;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isCPrivMsgExists() {
		return this.cPrivMsgExists;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isCNoticeExists() {
		return this.cNoticeExists;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getMaxTargets() {
		return this.maxTargets;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isKnockExists() {
		return this.knockExists;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isVChannels() {
		return this.vChannels;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getWatchMax() {
		return this.watchMax;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isWhoX() {
		return this.whoX;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isCallerID() {
		return this.callerID;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean isAccept() {
		return this.accept;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getLanguage() {
		return this.language;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getMotd() {
		return this.motd;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getHighestConnections() {
		return this.highestConnections;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getHighestClients() {
		return this.highestClients;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getTotalUsers() {
		return this.totalUsers;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getTotalInvisibleUsers() {
		return this.totalInvisibleUsers;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getTotalServers() {
		return this.totalServers;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getTotalOperatorsOnline() {
		return this.totalOperatorsOnline;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getTotalUnknownConnections() {
		return this.totalUnknownConnections;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getTotalChannelsFormed() {
		return this.totalChannelsFormed;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getServerUsers() {
		return this.serverUsers;
	}
	
	@java.lang.SuppressWarnings("all")
	public int getConnectedServers() {
		return this.connectedServers;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof ServerInfo)) return false;
		final ServerInfo other = (ServerInfo)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		if (this.getBot() == null ? other.getBot() != null : !this.getBot().equals((java.lang.Object)other.getBot())) return false;
		if (this.getPrefixes() == null ? other.getPrefixes() != null : !this.getPrefixes().equals((java.lang.Object)other.getPrefixes())) return false;
		if (this.getChannelTypes() == null ? other.getChannelTypes() != null : !this.getChannelTypes().equals((java.lang.Object)other.getChannelTypes())) return false;
		if (this.getChannelModes() == null ? other.getChannelModes() != null : !this.getChannelModes().equals((java.lang.Object)other.getChannelModes())) return false;
		if (this.getModes() != other.getModes()) return false;
		if (this.getMaxChannels() != other.getMaxChannels()) return false;
		if (this.getChanlimit() != other.getChanlimit()) return false;
		if (this.getMaxNickLength() != other.getMaxNickLength()) return false;
		if (this.getMaxBans() != other.getMaxBans()) return false;
		if (this.getMaxList() == null ? other.getMaxList() != null : !this.getMaxList().equals((java.lang.Object)other.getMaxList())) return false;
		if (this.getNetwork() == null ? other.getNetwork() != null : !this.getNetwork().equals((java.lang.Object)other.getNetwork())) return false;
		if (this.getExceptions() == null ? other.getExceptions() != null : !this.getExceptions().equals((java.lang.Object)other.getExceptions())) return false;
		if (this.getInvites() == null ? other.getInvites() != null : !this.getInvites().equals((java.lang.Object)other.getInvites())) return false;
		if (this.isWallChOps() != other.isWallChOps()) return false;
		if (this.isWallVoices() != other.isWallVoices()) return false;
		if (this.getStatusMessage() == null ? other.getStatusMessage() != null : !this.getStatusMessage().equals((java.lang.Object)other.getStatusMessage())) return false;
		if (this.getCaseMapping() == null ? other.getCaseMapping() != null : !this.getCaseMapping().equals((java.lang.Object)other.getCaseMapping())) return false;
		if (this.getEList() == null ? other.getEList() != null : !this.getEList().equals((java.lang.Object)other.getEList())) return false;
		if (this.getTopicLength() != other.getTopicLength()) return false;
		if (this.getKickLength() != other.getKickLength()) return false;
		if (this.getChannelLength() != other.getChannelLength()) return false;
		if (this.getChannelIDLength() != other.getChannelIDLength()) return false;
		if (this.getStandard() == null ? other.getStandard() != null : !this.getStandard().equals((java.lang.Object)other.getStandard())) return false;
		if (this.getSilence() != other.getSilence()) return false;
		if (this.isRFC2812() != other.isRFC2812()) return false;
		if (this.isPenalty() != other.isPenalty()) return false;
		if (this.isForcedNickChanges() != other.isForcedNickChanges()) return false;
		if (this.isSafeList() != other.isSafeList()) return false;
		if (this.getAwayLength() != other.getAwayLength()) return false;
		if (this.isNoQuit() != other.isNoQuit()) return false;
		if (this.isUserIPExists() != other.isUserIPExists()) return false;
		if (this.isCPrivMsgExists() != other.isCPrivMsgExists()) return false;
		if (this.isCNoticeExists() != other.isCNoticeExists()) return false;
		if (this.getMaxTargets() != other.getMaxTargets()) return false;
		if (this.isKnockExists() != other.isKnockExists()) return false;
		if (this.isVChannels() != other.isVChannels()) return false;
		if (this.getWatchMax() != other.getWatchMax()) return false;
		if (this.isWhoX() != other.isWhoX()) return false;
		if (this.isCallerID() != other.isCallerID()) return false;
		if (this.isAccept() != other.isAccept()) return false;
		if (this.getLanguage() == null ? other.getLanguage() != null : !this.getLanguage().equals((java.lang.Object)other.getLanguage())) return false;
		if (this.getMotd() == null ? other.getMotd() != null : !this.getMotd().equals((java.lang.Object)other.getMotd())) return false;
		if (this.getHighestConnections() != other.getHighestConnections()) return false;
		if (this.getHighestClients() != other.getHighestClients()) return false;
		if (this.getTotalUsers() != other.getTotalUsers()) return false;
		if (this.getTotalInvisibleUsers() != other.getTotalInvisibleUsers()) return false;
		if (this.getTotalServers() != other.getTotalServers()) return false;
		if (this.getTotalOperatorsOnline() != other.getTotalOperatorsOnline()) return false;
		if (this.getTotalUnknownConnections() != other.getTotalUnknownConnections()) return false;
		if (this.getTotalChannelsFormed() != other.getTotalChannelsFormed()) return false;
		if (this.getServerUsers() != other.getServerUsers()) return false;
		if (this.getConnectedServers() != other.getConnectedServers()) return false;
		return true;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean canEqual(final java.lang.Object other) {
		return other instanceof ServerInfo;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		result = result * PRIME + (this.getBot() == null ? 0 : this.getBot().hashCode());
		result = result * PRIME + (this.getPrefixes() == null ? 0 : this.getPrefixes().hashCode());
		result = result * PRIME + (this.getChannelTypes() == null ? 0 : this.getChannelTypes().hashCode());
		result = result * PRIME + (this.getChannelModes() == null ? 0 : this.getChannelModes().hashCode());
		result = result * PRIME + this.getModes();
		result = result * PRIME + this.getMaxChannels();
		result = result * PRIME + this.getChanlimit();
		result = result * PRIME + this.getMaxNickLength();
		result = result * PRIME + this.getMaxBans();
		result = result * PRIME + (this.getMaxList() == null ? 0 : this.getMaxList().hashCode());
		result = result * PRIME + (this.getNetwork() == null ? 0 : this.getNetwork().hashCode());
		result = result * PRIME + (this.getExceptions() == null ? 0 : this.getExceptions().hashCode());
		result = result * PRIME + (this.getInvites() == null ? 0 : this.getInvites().hashCode());
		result = result * PRIME + (this.isWallChOps() ? 1231 : 1237);
		result = result * PRIME + (this.isWallVoices() ? 1231 : 1237);
		result = result * PRIME + (this.getStatusMessage() == null ? 0 : this.getStatusMessage().hashCode());
		result = result * PRIME + (this.getCaseMapping() == null ? 0 : this.getCaseMapping().hashCode());
		result = result * PRIME + (this.getEList() == null ? 0 : this.getEList().hashCode());
		result = result * PRIME + this.getTopicLength();
		result = result * PRIME + this.getKickLength();
		result = result * PRIME + this.getChannelLength();
		result = result * PRIME + this.getChannelIDLength();
		result = result * PRIME + (this.getStandard() == null ? 0 : this.getStandard().hashCode());
		result = result * PRIME + this.getSilence();
		result = result * PRIME + (this.isRFC2812() ? 1231 : 1237);
		result = result * PRIME + (this.isPenalty() ? 1231 : 1237);
		result = result * PRIME + (this.isForcedNickChanges() ? 1231 : 1237);
		result = result * PRIME + (this.isSafeList() ? 1231 : 1237);
		result = result * PRIME + this.getAwayLength();
		result = result * PRIME + (this.isNoQuit() ? 1231 : 1237);
		result = result * PRIME + (this.isUserIPExists() ? 1231 : 1237);
		result = result * PRIME + (this.isCPrivMsgExists() ? 1231 : 1237);
		result = result * PRIME + (this.isCNoticeExists() ? 1231 : 1237);
		result = result * PRIME + this.getMaxTargets();
		result = result * PRIME + (this.isKnockExists() ? 1231 : 1237);
		result = result * PRIME + (this.isVChannels() ? 1231 : 1237);
		result = result * PRIME + this.getWatchMax();
		result = result * PRIME + (this.isWhoX() ? 1231 : 1237);
		result = result * PRIME + (this.isCallerID() ? 1231 : 1237);
		result = result * PRIME + (this.isAccept() ? 1231 : 1237);
		result = result * PRIME + (this.getLanguage() == null ? 0 : this.getLanguage().hashCode());
		result = result * PRIME + (this.getMotd() == null ? 0 : this.getMotd().hashCode());
		result = result * PRIME + this.getHighestConnections();
		result = result * PRIME + this.getHighestClients();
		result = result * PRIME + this.getTotalUsers();
		result = result * PRIME + this.getTotalInvisibleUsers();
		result = result * PRIME + this.getTotalServers();
		result = result * PRIME + this.getTotalOperatorsOnline();
		result = result * PRIME + this.getTotalUnknownConnections();
		result = result * PRIME + this.getTotalChannelsFormed();
		result = result * PRIME + this.getServerUsers();
		result = result * PRIME + this.getConnectedServers();
		return result;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "ServerInfo(bot=" + this.getBot() + ", prefixes=" + this.getPrefixes() + ", channelTypes=" + this.getChannelTypes() + ", channelModes=" + this.getChannelModes() + ", modes=" + this.getModes() + ", maxChannels=" + this.getMaxChannels() + ", chanlimit=" + this.getChanlimit() + ", maxNickLength=" + this.getMaxNickLength() + ", maxBans=" + this.getMaxBans() + ", maxList=" + this.getMaxList() + ", network=" + this.getNetwork() + ", exceptions=" + this.getExceptions() + ", invites=" + this.getInvites() + ", wallChOps=" + this.isWallChOps() + ", wallVoices=" + this.isWallVoices() + ", statusMessage=" + this.getStatusMessage() + ", caseMapping=" + this.getCaseMapping() + ", EList=" + this.getEList() + ", topicLength=" + this.getTopicLength() + ", kickLength=" + this.getKickLength() + ", channelLength=" + this.getChannelLength() + ", channelIDLength=" + this.getChannelIDLength() + ", standard=" + this.getStandard() + ", silence=" + this.getSilence() + ", RFC2812=" + this.isRFC2812() + ", penalty=" + this.isPenalty() + ", forcedNickChanges=" + this.isForcedNickChanges() + ", safeList=" + this.isSafeList() + ", awayLength=" + this.getAwayLength() + ", noQuit=" + this.isNoQuit() + ", userIPExists=" + this.isUserIPExists() + ", cPrivMsgExists=" + this.isCPrivMsgExists() + ", cNoticeExists=" + this.isCNoticeExists() + ", maxTargets=" + this.getMaxTargets() + ", knockExists=" + this.isKnockExists() + ", vChannels=" + this.isVChannels() + ", watchMax=" + this.getWatchMax() + ", whoX=" + this.isWhoX() + ", callerID=" + this.isCallerID() + ", accept=" + this.isAccept() + ", language=" + this.getLanguage() + ", motd=" + this.getMotd() + ", highestConnections=" + this.getHighestConnections() + ", highestClients=" + this.getHighestClients() + ", totalUsers=" + this.getTotalUsers() + ", totalInvisibleUsers=" + this.getTotalInvisibleUsers() + ", totalServers=" + this.getTotalServers() + ", totalOperatorsOnline=" + this.getTotalOperatorsOnline() + ", totalUnknownConnections=" + this.getTotalUnknownConnections() + ", totalChannelsFormed=" + this.getTotalChannelsFormed() + ", serverUsers=" + this.getServerUsers() + ", connectedServers=" + this.getConnectedServers() + ")";
	}
	
	@java.lang.SuppressWarnings("all")
	void setPrefixes(final String prefixes) {
		this.prefixes = prefixes;
	}
	
	@java.lang.SuppressWarnings("all")
	void setChannelTypes(final String channelTypes) {
		this.channelTypes = channelTypes;
	}
	
	@java.lang.SuppressWarnings("all")
	void setChannelModes(final String channelModes) {
		this.channelModes = channelModes;
	}
	
	@java.lang.SuppressWarnings("all")
	void setModes(final int modes) {
		this.modes = modes;
	}
	
	@java.lang.SuppressWarnings("all")
	void setMaxChannels(final int maxChannels) {
		this.maxChannels = maxChannels;
	}
	
	@java.lang.SuppressWarnings("all")
	void setChanlimit(final int chanlimit) {
		this.chanlimit = chanlimit;
	}
	
	@java.lang.SuppressWarnings("all")
	void setMaxNickLength(final int maxNickLength) {
		this.maxNickLength = maxNickLength;
	}
	
	@java.lang.SuppressWarnings("all")
	void setMaxBans(final int maxBans) {
		this.maxBans = maxBans;
	}
	
	@java.lang.SuppressWarnings("all")
	void setMaxList(final String maxList) {
		this.maxList = maxList;
	}
	
	@java.lang.SuppressWarnings("all")
	void setNetwork(final String network) {
		this.network = network;
	}
	
	@java.lang.SuppressWarnings("all")
	void setExceptions(final String exceptions) {
		this.exceptions = exceptions;
	}
	
	@java.lang.SuppressWarnings("all")
	void setInvites(final String invites) {
		this.invites = invites;
	}
	
	@java.lang.SuppressWarnings("all")
	void setWallChOps(final boolean wallChOps) {
		this.wallChOps = wallChOps;
	}
	
	@java.lang.SuppressWarnings("all")
	void setWallVoices(final boolean wallVoices) {
		this.wallVoices = wallVoices;
	}
	
	@java.lang.SuppressWarnings("all")
	void setStatusMessage(final String statusMessage) {
		this.statusMessage = statusMessage;
	}
	
	@java.lang.SuppressWarnings("all")
	void setCaseMapping(final String caseMapping) {
		this.caseMapping = caseMapping;
	}
	
	@java.lang.SuppressWarnings("all")
	void setEList(final String EList) {
		this.EList = EList;
	}
	
	@java.lang.SuppressWarnings("all")
	void setTopicLength(final int topicLength) {
		this.topicLength = topicLength;
	}
	
	@java.lang.SuppressWarnings("all")
	void setKickLength(final int kickLength) {
		this.kickLength = kickLength;
	}
	
	@java.lang.SuppressWarnings("all")
	void setChannelLength(final int channelLength) {
		this.channelLength = channelLength;
	}
	
	@java.lang.SuppressWarnings("all")
	void setChannelIDLength(final int channelIDLength) {
		this.channelIDLength = channelIDLength;
	}
	
	@java.lang.SuppressWarnings("all")
	void setStandard(final String standard) {
		this.standard = standard;
	}
	
	@java.lang.SuppressWarnings("all")
	void setSilence(final int silence) {
		this.silence = silence;
	}
	
	@java.lang.SuppressWarnings("all")
	void setRFC2812(final boolean RFC2812) {
		this.RFC2812 = RFC2812;
	}
	
	@java.lang.SuppressWarnings("all")
	void setPenalty(final boolean penalty) {
		this.penalty = penalty;
	}
	
	@java.lang.SuppressWarnings("all")
	void setForcedNickChanges(final boolean forcedNickChanges) {
		this.forcedNickChanges = forcedNickChanges;
	}
	
	@java.lang.SuppressWarnings("all")
	void setSafeList(final boolean safeList) {
		this.safeList = safeList;
	}
	
	@java.lang.SuppressWarnings("all")
	void setAwayLength(final int awayLength) {
		this.awayLength = awayLength;
	}
	
	@java.lang.SuppressWarnings("all")
	void setNoQuit(final boolean noQuit) {
		this.noQuit = noQuit;
	}
	
	@java.lang.SuppressWarnings("all")
	void setUserIPExists(final boolean userIPExists) {
		this.userIPExists = userIPExists;
	}
	
	@java.lang.SuppressWarnings("all")
	void setCPrivMsgExists(final boolean cPrivMsgExists) {
		this.cPrivMsgExists = cPrivMsgExists;
	}
	
	@java.lang.SuppressWarnings("all")
	void setCNoticeExists(final boolean cNoticeExists) {
		this.cNoticeExists = cNoticeExists;
	}
	
	@java.lang.SuppressWarnings("all")
	void setMaxTargets(final int maxTargets) {
		this.maxTargets = maxTargets;
	}
	
	@java.lang.SuppressWarnings("all")
	void setKnockExists(final boolean knockExists) {
		this.knockExists = knockExists;
	}
	
	@java.lang.SuppressWarnings("all")
	void setVChannels(final boolean vChannels) {
		this.vChannels = vChannels;
	}
	
	@java.lang.SuppressWarnings("all")
	void setWatchMax(final int watchMax) {
		this.watchMax = watchMax;
	}
	
	@java.lang.SuppressWarnings("all")
	void setWhoX(final boolean whoX) {
		this.whoX = whoX;
	}
	
	@java.lang.SuppressWarnings("all")
	void setCallerID(final boolean callerID) {
		this.callerID = callerID;
	}
	
	@java.lang.SuppressWarnings("all")
	void setAccept(final boolean accept) {
		this.accept = accept;
	}
	
	@java.lang.SuppressWarnings("all")
	void setLanguage(final String language) {
		this.language = language;
	}
	
	@java.lang.SuppressWarnings("all")
	void setMotd(final String motd) {
		this.motd = motd;
	}
	
	@java.lang.SuppressWarnings("all")
	void setHighestConnections(final int highestConnections) {
		this.highestConnections = highestConnections;
	}
	
	@java.lang.SuppressWarnings("all")
	void setHighestClients(final int highestClients) {
		this.highestClients = highestClients;
	}
	
	@java.lang.SuppressWarnings("all")
	void setTotalUsers(final int totalUsers) {
		this.totalUsers = totalUsers;
	}
	
	@java.lang.SuppressWarnings("all")
	void setTotalInvisibleUsers(final int totalInvisibleUsers) {
		this.totalInvisibleUsers = totalInvisibleUsers;
	}
	
	@java.lang.SuppressWarnings("all")
	void setTotalServers(final int totalServers) {
		this.totalServers = totalServers;
	}
	
	@java.lang.SuppressWarnings("all")
	void setTotalOperatorsOnline(final int totalOperatorsOnline) {
		this.totalOperatorsOnline = totalOperatorsOnline;
	}
	
	@java.lang.SuppressWarnings("all")
	void setTotalUnknownConnections(final int totalUnknownConnections) {
		this.totalUnknownConnections = totalUnknownConnections;
	}
	
	@java.lang.SuppressWarnings("all")
	void setTotalChannelsFormed(final int totalChannelsFormed) {
		this.totalChannelsFormed = totalChannelsFormed;
	}
	
	@java.lang.SuppressWarnings("all")
	void setServerUsers(final int serverUsers) {
		this.serverUsers = serverUsers;
	}
	
	@java.lang.SuppressWarnings("all")
	void setConnectedServers(final int connectedServers) {
		this.connectedServers = connectedServers;
	}
}